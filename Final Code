#include <Servo.h>
#include <NewPing.h>

//Servo Motor
#define SERVO_PIN A2

//Ultrasonic Sensor
#define TRIG_PIN A5
#define ECHO_PIN A4

//Right Motor
#define RM_Enable A0
#define in1 13
#define in2 12

//Left Motor
#define LM_Enable A1
#define in3 10
#define in4 11

//8 IR Sensor array
#define ir1 2
#define ir2 3
#define ir3 4
#define ir4 5
#define ir5 6
#define ir6 7
#define ir7 8
#define ir8 9

long Left,Right,Front;
int LMS=140,RMS=140;
int s1,s2,s3,s4,s5,s6,s7,s8;

void setup()
{
  //Set up Servo Motor
  pinMode(SERVO_PIN, OUTPUT);

  // Set up Ultrasonic Sensor
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  
  // Set up Motor Driver pins
  pinMode(RM_Enable, OUTPUT);
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(LM_Enable, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);

  // Enabling the Motor Driver
  analogWrite(RM_Enable,RMS);
  analogWrite(LM_Enable,LMS);

  // Set up the sensor array
  pinMode(ir1,INPUT);
  pinMode(ir2,INPUT);
  pinMode(ir3,INPUT);
  pinMode(ir4,INPUT);
  pinMode(ir5,INPUT);
  pinMode(ir6,INPUT);
  pinMode(ir7,INPUT);
  pinMode(ir8,INPUT);
  
  // Initialize serial communication for debugging
  Serial.begin(9600);
  delay(1000);
  Serial.println("Calibration complete. Place the robot on the line.");
  delay(2000);
}

//Checking distance
void side()
{
  stopBot();
  delay(100);
  for (int angle = 100; angle <= 170; angle += 5)
  {
   servoPulse(SERVO_PIN,angle); 
  }
  delay(300);
  Right = Ultrasonic_read();
  Serial.print("Right=");
  Serial.println(Right);
  delay(100);
  for (int angle = 170; angle >= 30; angle -= 5)
  {
   servoPulse(SERVO_PIN, angle);
  }
  delay(500);
  Left = Ultrasonic_read();
  Serial.print("Left=");
  Serial.println(Left);
  delay(100);
 for (int angle = 30; angle <= 100; angle += 5)
 {
  servoPulse(SERVO_PIN, angle);
 }
  delay(300);
  distance();
}

//Servo Rotation
void servoPulse (int pin, int angle)
{
  int pwm = (angle*11) + 500;// Converting angle to micro-seconds
  digitalWrite(pin, HIGH);
  delayMicroseconds(pwm);
  digitalWrite(pin, LOW);
  delay(50);
}

//Checking Distance by Ultrasonic sensor
long Ultrasonic_read()
{
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);
  long duration = pulseIn (ECHO_PIN, HIGH);
  long dist=duration*0.034/2;
  Serial.print("distance=");
  Serial.println(dist);
  return dist;
}

//Comparing distance
void distance()
{
  if(Left > Right)
  {
    turnLeft();
    delay(500);
    forward();
    delay(400);
    turnRight();
    delay(500);
    forward();
    delay(400);
    turnRight();
    delay(500);
  }
  else
  {
    turnRight();
    delay(500);
    forward();
    delay(400);
    turnLeft();
    delay(500);
    forward();
    delay(400);  
    turnLeft();
    delay(500);
  }
}

//Bot Movement
void forward()
{
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
  //analogWrite(RM_Enable,60);
  //analogWrite(LM_Enable,60);
};

void backward()
{
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW); 
  digitalWrite(in4, HIGH);
  //analogWrite(RM_Enable,60);
  //analogWrite(LM_Enable,60);
}

void turnLeft()
{
  digitalWrite(in1, LOW); 
  digitalWrite(in2, HIGH);
  digitalWrite(in3, LOW); 
  digitalWrite(in4, LOW);
  //analogWrite(RM_Enable,60);
  //analogWrite(LM_Enable,0);
}

void turnRight()
{
  digitalWrite(in1, LOW); 
  digitalWrite(in2, LOW);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
  //analogWrite(RM_Enable,0);
  //analogWrite(LM_Enable,60);
}

void stopBot()
{
  digitalWrite(in1, LOW); 
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, LOW);
  //analogWrite(RM_Enable,0);
  //analogWrite(LM_Enable,0);
}

void loop()
{
  //int Set=15;
  Front = Ultrasonic_read();
  Serial.print("Front=");
  Serial.println(Front);

  s1=digitalRead(ir1);
  s2=digitalRead(ir2);
  s3=digitalRead(ir3);
  s4=digitalRead(ir4);
  s5=digitalRead(ir5);
  s6=digitalRead(ir6);
  s7=digitalRead(ir7);
  s8=digitalRead(ir8);

  Serial.print(s1);
  Serial.print(" ");
  Serial.print(s2);
  Serial.print(" ");
  Serial.print(s3);
  Serial.print(" ");
  Serial.print(s4);
  Serial.print(" ");
  Serial.print(s5);
  Serial.print(" ");
  Serial.print(s6);
  Serial.print(" ");
  Serial.print(s7);
  Serial.print(" ");
  Serial.print(s8);
  Serial.println(" ");
  delay (1000);
  Serial.println();

  // Control the motors
  if ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))
  {
    stopBot();
  }
  else if (((s1==0)&&(s2==0)&&(s3==0)&&(s4==1)&&(s5==1)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==1)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==1)&&(s8==0))||
  ((s1==1)&&(s2==1)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==1)&&(s8==1))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==1)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==1)&&(s6==0)&&(s7==0)&&(s8==0)))
  {
    if(Front > 100)
    {
      forward();
    }
    else
    {
      side();
    } 
  }
  else if (((s1==0)&&(s2==1)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==1)&&(s8==1))||
  ((s1==0)&&(s2==0)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==1)&&(s8==1))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==1)&&(s8==1))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==1)&&(s6==1)&&(s7==1)&&(s8==1))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==1)&&(s7==1)&&(s8==1))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==1)&&(s8==1))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==1))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==1)&&(s7==1)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==1)&&(s6==1)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==1)&&(s6==1)&&(s7==1)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==1)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==1)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==1)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==1)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==1)))
  {
    turnLeft();
  }
  else if (((s1==1)&&(s2==1)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==1)&&(s8==0))||
  ((s1==1)&&(s2==1)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==0)&&(s8==0))||
  ((s1==1)&&(s2==1)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==1)&&(s2==1)&&(s3==1)&&(s4==1)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==1)&&(s2==1)&&(s3==1)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==1)&&(s2==1)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==1)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==1)&&(s3==1)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==1)&&(s4==1)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==1)&&(s3==1)&&(s4==1)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==1)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==1)&&(s3==1)&&(s4==1)&&(s5==1)&&(s6==1)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==0)&&(s3==1)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==0)&&(s2==1)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0))||
  ((s1==1)&&(s2==0)&&(s3==0)&&(s4==0)&&(s5==0)&&(s6==0)&&(s7==0)&&(s8==0)))
  {
    turnRight();
  }

  delay(10);
}
